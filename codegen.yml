overwrite: true
schema: ./server/src/modules/*/typeDefs/*.graphql.ts
documents: ['./client/src/components/**/*.tsx', './client/src/hooks/**/*.ts']
config:
  scalars:
    TimelessDate: 'TimelessDateString'
    IBAN: string
    Percentage: number
    URL: 'URL | string'
    FileScalar: 'File | Blob'
generates:
  server/src/modules/:
    preset: graphql-modules
    presetConfig:
      baseTypesPath: ../__generated__/types.ts
      filename: __generated__/types.ts
      encapsulateModuleTypes: namespace
    config:
      immutableTypes: true
      contextType: 'GraphQLModules.Context'
      optionalResolveType: true
      enumValues:
        MissingChargeInfo: '../models/enums.js#MissingChargeInfo'
        ChargeSortByField: '../models/enums.js#ChargeSortByField'
        TransactionDirection: '../models/enums.js#TransactionDirection'
        Currency: '../models/enums.js#Currency'
        DocumentType: '../models/enums.js#DocumentType'
      mappers:
        LtdFinancialEntity: ./financial-entities.types.js#IGetFinancialEntitiesByIdsResult
        PersonalFinancialEntity: ./financial-entities.types.js#IGetFinancialEntitiesByIdsResult
        BankFinancialAccount: ./financial-accounts.types.js#IGetFinancialAccountsByFinancialEntityIdsResult
        CardFinancialAccount: ./financial-accounts.types.js#IGetFinancialAccountsByFinancialEntityIdsResult
        Charge: ./charges.types.js#IGetChargesByIdsResult
        LedgerRecord: ./ledger-records.types.js#IGetLedgerRecordsByChargeIdsResult
        NamedCounterparty: ../models/index.js#CounterpartyProto
        Invoice: ./documents.types.js#IGetAllDocumentsResult
        Proforma: ./documents.types.js#IGetAllDocumentsResult
        Receipt: ./documents.types.js#IGetAllDocumentsResult
        InvoiceReceipt: ./documents.types.js#IGetAllDocumentsResult
        WireTransaction: ./charges.types.js#IGetChargesByIdsResult
        FeeTransaction: ./charges.types.js#IGetChargesByIdsResult
        ConversionTransaction: ./charges.types.js#IGetChargesByIdsResult
        CommonTransaction: ./charges.types.js#IGetChargesByIdsResult
        BeneficiaryCounterparty: ../models/index.js#BeneficiaryCounterpartyProto
        Unprocessed: ./documents.types.js#IGetAllDocumentsResult
        SortCode: ./hash-sort-codes.types.js#IGetSortCodesByIdsResult
        HashavshevetAccount: ./hash-account-cards.types.js#IGetAccountCardsBySortCodesResult
        BusinessTransactionSum: ../models/index.js#RawBusinessTransactionsSum
        VatReportRecord: ../helpers/vat-report.js#DecoratedVatReportRecord
    plugins:
      - add:
          content: "import { TimelessDateString } from 'models/index.js'"
      - 'typescript'
      - 'typescript-resolvers'
  client/src/gql/:
    preset: 'client'
    presetConfig:
      fragmentMasking:
        unmaskFunctionName: 'getFragmentData'
    plugins:
      - add:
          content: "import { TimelessDateString } from '../helpers'"

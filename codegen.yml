overwrite: true
schema: './**/*.graphql'
documents: './client/src/**/*.tsx'
generates:
  server/src/__generated__/types.mts:
    config:
      optionalResolveType: true
      mappers:
        LtdFinancialEntity: ./financialEntities.types.mjs#IGetFinancialEntitiesByIdsResult
        PersonalFinancialEntity: ./financialEntities.types.mjs#IGetFinancialEntitiesByIdsResult
        BankFinancialAccount: ./financialAccounts.types.mjs#IGetFinancialAccountsByFeIdsResult
        CardFinancialAccount: ./financialAccounts.types.mjs#IGetFinancialAccountsByFeIdsResult
        Charge: ./charges.types.mjs#IGetChargesByFinancialAccountNumbersResult
        LedgerRecord: ./ledgerRecords.types.mjs#IGetLedgerRecordsByFinancialAccountNumbersResult
        NamedCounterparty: string
        Invoice: ./sqlQueries.types.mjs#IGetEmailDocsResult
        Proforma: ./sqlQueries.types.mjs#IGetEmailDocsResult
        Receipt: ./sqlQueries.types.mjs#IGetEmailDocsResult
        InvoiceReceipt: ./sqlQueries.types.mjs#IGetEmailDocsResult
        WireTransaction: ./charges.types.mjs#IGetChargesByFinancialAccountNumbersResult
        FeeTransaction: ./charges.types.mjs#IGetChargesByFinancialAccountNumbersResult
        ConversionTransaction: ./charges.types.mjs#IGetChargesByFinancialAccountNumbersResult
        CommonTransaction: ./charges.types.mjs#IGetChargesByFinancialAccountNumbersResult
        BeneficiaryCounterparty: ../prototypes.mjs#BeneficiaryCounterpartyProto
        Unprocessed: ./sqlQueries.types.mjs#IGetEmailDocsResult
    plugins:
      - 'typescript'
      - 'typescript-resolvers'
  client/src/__generated__/types.ts:
    config:
      fetcher:
        func: '../hooks/useGraphql#useGraphql'
        isReactHook: true
    plugins:
      - 'typescript'
      - 'typescript-operations'
      - 'typescript-react-query'

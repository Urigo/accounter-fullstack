name: CI
env:
  NODE_NO_WARNINGS: true
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  POSTGRES_DB: accounter
on:
  pull_request:
    branches:
      - 'main'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 21.3.0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{runner.os}}-19-yarn-${{hashFiles('yarn.lock')}}
          restore-keys: |
            ${{runner.os}}-19-yarn-

      - name: Install Dependencies
        run: yarn

      - name: run containers
        timeout-minutes: 10
        run: |
          source docker/.ci.env
          docker compose \
            -f docker/docker-compose.dev.yml \
            up -d --wait

      - name: run DB migrations
        run: yarn --cwd packages/migrations db:init

      - name: Generate codegen
        run: yarn codegen

      - name: Generate pgTyped
        run: yarn pgtyped -c docker/pgconfig.json

      - name: Build Packages
        run: yarn build

      - name: Run Tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: yarn test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Master
        uses: actions/checkout@v3

      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 21.3.0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{runner.os}}-19-yarn-${{hashFiles('yarn.lock')}}
          restore-keys: |
            ${{runner.os}}-19-yarn-

      - name: Install Dependencies
        run: yarn

      - name: Lint ESLint
        run: yarn lint

      - name: Lint Prettier
        run: yarn prettier:check

      - name: Generate
        run: yarn codegen # TODO: replace with 'yarn generate' after local DB is implemented

      - name: Validate GraphQL schema
        run: yarn graphql:validate

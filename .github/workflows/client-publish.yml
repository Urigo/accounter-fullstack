on:
  workflow_call:
    secrets:
      apiToken:
      accountId:

jobs:
  client-changes-detector:
    name: Check for Client app changes
    runs-on: ubuntu-latest
    environment: accounter-fullstack
    outputs:
      client_changes_present: ${{ steps.client_changes_present.outputs.client_changes }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Get changed files
        id: client-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            packages/client/**

      - name: check for changes
        id: client_changes_present
        run:
          echo "client_changes=${{ steps.client-files.outputs.any_changed == 'true' }}" >>
          $GITHUB_OUTPUT

  search-token:
    runs-on: ubuntu-latest
    environment: accounter-fullstack
    outputs:
      api_token_present: ${{ steps.secrets_present.outputs.api_token }}
    steps:
      - name: check for Hive token presence
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.apiToken }}
        id: secrets_present
        run: echo "api_token=${{ env.CLOUDFLARE_API_TOKEN != '' }}" >> $GITHUB_OUTPUT

  client-publish:
    needs: [client-changes-detector, search-token]
    if:
      ${{needs.client-changes-detector.outputs.client_changes_present == 'true' &&
      needs.search-token.outputs.api_token_present == 'true'}}
    runs-on: ubuntu-latest
    environment: accounter-fullstack
    permissions:
      contents: read
      deployments: write
    name: Publish Client to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{runner.os}}-19-yarn-${{hashFiles('yarn.lock')}}
          restore-keys: |
            ${{runner.os}}-19-yarn-

      - name: Install Dependencies
        run: yarn

      - name: Generate GraphQL
        run: yarn generate:graphql

      - name: Build Client
        working-directory: packages/client
        run:
          yarn build  --mode ${{ (github.ref == 'refs/heads/main' && 'staging') || (github.ref ==
          'refs/heads/prod' && 'production') || 'development' }}

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.apiToken }}
          accountId: ${{ secrets.accountId }}
          projectName:
            ${{ (github.ref == 'refs/heads/main' && 'accounter-staging') || (github.ref ==
            'refs/heads/prod' && 'accounter-prod') || '' }}
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          workingDirectory: packages/client

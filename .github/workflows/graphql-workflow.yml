name: GraphQL Schema Management

on:
  workflow_call:
    secrets:
      hiveDevRegistryToken:
        required: true
      hiveToken:
        required: true

env:
  NODE_NO_WARNINGS: true
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  POSTGRES_DB: accounter
  CLOUDINARY_NAME: name
  CLOUDINARY_API_KEY: key
  CLOUDINARY_API_SECRET: secret
  GREEN_INVOICE_ID: id
  GREEN_INVOICE_SECRET: secret
  DEFAULT_FINANCIAL_ENTITY_ID: 00000000-0000-0000-0000-000000000000

jobs:
  generate-legacy-subgraph:
    name: Generate Legacy Subgraph Schema
    runs-on: ubuntu-latest
    environment: accounter-fullstack
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Generate GraphQL schema
        run: yarn generate-subgraph

      - name: Verify file exists
        run: ls -l packages/server/legacy-subgraph.graphql

      - name: Upload generated schema as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: legacy-subgraph-graphql
          path: packages/server/legacy-subgraph.graphql

  schema-check:
    name: Check Schema for Breaking Changes
    needs: generate-legacy-subgraph
    runs-on: ubuntu-latest
    environment: accounter-fullstack
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download generated schema artifact
        uses: actions/download-artifact@v4
        with:
          name: legacy-subgraph-graphql
          path: packages/server/

      - name: Hive - Schema Check
        env:
          HIVE_DEV_REGISTRY_TOKEN: ${{ secrets.hiveDevRegistryToken }}
        run: |
          curl -sSL https://graphql-hive.com/install.sh | sh
          hive schema:check \
          --registry.accessToken "${HIVE_DEV_REGISTRY_TOKEN}" \
          --service="legacy" \
          --url="http://localhost:4001/subgraphs/legacy" \
          packages/server/legacy-subgraph.graphql

  schema-publish:
    name: Publish Schema
    needs: schema-check
    runs-on: ubuntu-latest
    environment: accounter-fullstack
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download generated schema artifact
        uses: actions/download-artifact@v4
        with:
          name: legacy-subgraph-graphql
          path: packages/server/

      - name: Publish schema to Hive
        env:
          HIVE_DEV_REGISTRY_TOKEN: ${{ secrets.hiveDevRegistryToken }}
        run: |
          curl -sSL https://graphql-hive.com/install.sh | sh
          hive schema:publish \
          --registry.accessToken "${HIVE_DEV_REGISTRY_TOKEN}" \
          --service="legacy" \
          --url="http://localhost:4001/subgraphs/legacy" \
          --author "GitHub Actions" \
          --commit "Publish from CI" \
          packages/server/legacy-subgraph.graphql
